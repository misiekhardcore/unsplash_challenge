{"version":3,"sources":["hooks/hooks.ts","redux/photosSlice.ts","Components/Button.tsx","Components/Input.tsx","Components/AddPhoto.tsx","Components/Navbar.tsx","Components/PhotoCard.tsx","Components/Photos.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","photos","loading","error","undefined","getAllPhotos","createAsyncThunk","a","page","search","rejectWithValue","axios","get","process","response","data","createPhoto","photo","post","user","deletePhoto","id","delete","photosSlice","createSlice","name","reducers","clearPhotos","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","unshift","filter","p","meta","arg","actions","selectPhotos","StyledButton","styled","button","props","blank","Button","children","onClick","type","Input","input","ContainerAddPhoto","div","FormAddPhoto","AddPhoto","setToggle","useState","label","url","setState","dispatch","onSubmit","e","preventDefault","placeholder","value","onChange","target","StyledNav","nav","Flex","FColumn","Form","form","Navbar","setSearch","setPage","setValue","style","marginRight","src","alt","Card","PhotoCard","Container","Photos","breakpointCols","className","columnClassName","map","App","toggle","useEffect","marginBottom","width","display","justifyContent","prev","store","configureStore","reducer","photosReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e2547f2.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../redux/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n  createAsyncThunk,\n  createSlice,\n  SerializedError,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"./store\";\nimport { Photo } from \"../types\";\n\nexport interface ProductsState {\n  photos: Photo[];\n  loading: boolean;\n  error: SerializedError | undefined;\n}\n\nconst initialState: ProductsState = {\n  photos: [],\n  loading: false,\n  error: undefined,\n};\n\nexport const getAllPhotos = createAsyncThunk<\n  Photo[],\n  { page: number; search: string },\n  { rejectValue: SerializedError }\n>(\n  \"photos/getAllPhotos\",\n  async ({ page = 0, search = \"\" }, { rejectWithValue }) => {\n    try {\n      const response = await axios.get<Photo[]>(\n        `${process.env.REACT_APP_API_URI}/api/photos/?page=${page}&search=${search}`\n      );\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const createPhoto = createAsyncThunk<\n  Photo,\n  { label: string; url: string },\n  { rejectValue: SerializedError }\n>(\"photo/createPhoto\", async (photo, { rejectWithValue }) => {\n  try {\n    const response = await axios.post<Photo>(\n      `${process.env.REACT_APP_API_URI}/api/photos/`,\n      { ...photo, user: 1 }\n    );\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const deletePhoto = createAsyncThunk<\n  boolean,\n  { id: number },\n  { rejectValue: SerializedError }\n>(\"photo/deletePhoto\", async ({ id }, { rejectWithValue }) => {\n  try {\n    const response = await axios.delete<boolean>(\n      `${process.env.REACT_APP_API_URI}/api/photos/${id}`\n    );\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const photosSlice = createSlice({\n  name: \"photos\",\n  initialState,\n  reducers: {\n    clearPhotos: (state) => {\n      state.photos = [];\n      return state;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAllPhotos.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getAllPhotos.fulfilled, (state, action) => {\n        state.loading = false;\n        state.photos.push(...action.payload);\n        state.error = undefined;\n      })\n      .addCase(getAllPhotos.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(createPhoto.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(createPhoto.fulfilled, (state, action) => {\n        state.loading = false;\n        state.photos.unshift(action.payload);\n        state.error = undefined;\n      })\n      .addCase(createPhoto.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(deletePhoto.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(deletePhoto.fulfilled, (state, action) => {\n        state.loading = false;\n        state.photos = state.photos.filter(\n          (p) => p.id !== action.meta.arg.id\n        );\n        state.error = undefined;\n      });\n  },\n});\n\nexport const { clearPhotos } = photosSlice.actions;\n\nexport const selectPhotos = (state: RootState) => state.photos;\n\nexport default photosSlice.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ blank?: boolean }>`\n  font-weight: 700;\n  color: ${(props) => (props.blank ? \"#BDBDBD\" : \"white\")};\n  font-family: \"Noto Sans\", sans-serif;\n  font-style: normal;\n  background-color: ${(props) =>\n    props.blank ? \"rgba(0,0,0,0)\" : \"#3db46d\"};\n  border: ${(props) => (props.blank ? \"none\" : \"solid 1px #3db46d\")};\n  border-radius: 12px;\n  ${(props) =>\n    !props.blank && \"box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.1);\"}\n  padding: 1.5rem;\n  transition: all 0.3s ease;\n\n  &:hover,\n  &focus {\n    cursor: pointer;\n    ${(props) => !props.blank && \"background-color: #1a7940;\"}\n    ${(props) => props.blank && \"color: #999;\"}\n  }\n`;\n\ninterface ButtonProps {\n  blank?: boolean;\n  onClick?: () => any;\n  type?: \"button\" | \"submit\" | \"reset\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  blank = false,\n  children,\n  onClick,\n  type = \"button\",\n}) => {\n  return (\n    <StyledButton type={type} blank={blank} onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  padding: 1.5rem;\n  border: 1px solid #bdbdbd;\n  filter: drop-shadow(0px 1px 6px rgba(0, 0, 0, 0.1));\n  border-radius: 12px;\n  margin-left: 2rem;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppDispatch } from \"../hooks/hooks\";\nimport { createPhoto } from \"../redux/photosSlice\";\nimport { Button } from \"./Button\";\nimport { Input } from \"./Input\";\n\nconst ContainerAddPhoto = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 10;\n`;\n\nconst FormAddPhoto = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 2rem 5.5rem;\n  border-radius: 12px;\n  width: 50%;\n\n  h1 {\n    font-size: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    label,\n    input {\n      display: block;\n      width: 100%;\n      min-width: 0;\n      margin: 0;\n    }\n\n    label {\n      font-size: 0.9rem;\n      margin-bottom: 0.625rem;\n    }\n\n    input {\n      margin-bottom: 1.2rem;\n    }\n  }\n\n  div {\n    margin-left: auto;\n    display: flex;\n    gap: 1rem;\n  }\n`;\n\ninterface AddPhotoProps {\n  setToggle: (a: any) => any;\n}\n\nexport const AddPhoto: React.FC<AddPhotoProps> = ({ setToggle }) => {\n  const [state, setState] = useState({ label: \"\", url: \"\", user: 1 });\n  const dispatch = useAppDispatch();\n\n  return (\n    <ContainerAddPhoto>\n      <FormAddPhoto>\n        <h1>Add a new photo</h1>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            dispatch(createPhoto({ ...state }));\n          }}\n        >\n          <label>Label</label>\n          <Input\n            placeholder=\"Suspendisse elit massa\"\n            value={state.label}\n            onChange={(e) =>\n              setState({ ...state, label: e.target.value })\n            }\n          />\n          <label>Photo URL</label>\n          <Input\n            placeholder=\"https://images.unsplash.com/photo-1584395630\"\n            value={state.url}\n            onChange={(e) =>\n              setState({ ...state, url: e.target.value })\n            }\n          />\n          <div>\n            <Button blank onClick={() => setToggle(false)}>\n              Cancel\n            </Button>\n            <Button type=\"submit\">Submit</Button>\n          </div>\n        </form>\n      </FormAddPhoto>\n    </ContainerAddPhoto>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppDispatch } from \"../hooks/hooks\";\nimport { clearPhotos } from \"../redux/photosSlice\";\nimport { Button } from \"./Button\";\nimport { Input } from \"./Input\";\n\nconst StyledNav = styled.nav`\n  padding: 2rem 5.5rem;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const FColumn = styled(Flex)`\n  flex-direction: column;\n  align-items: flex-start;\n\n  h3 {\n    color: #333;\n    font-weight: 800;\n    font-size: 14px;\n    line-height: 19px;\n  }\n\n  p {\n    color: #333;\n    font-weight: 500;\n    font-size: 9px;\n    line-height: 12px;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n`;\n\ninterface navbarProps {\n  setToggle: (a: any) => any;\n  setSearch: (a: any) => any;\n  setPage: (a: any) => any;\n}\n\nexport const Navbar: React.FC<navbarProps> = ({\n  setToggle,\n  setSearch,\n  setPage,\n}) => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useAppDispatch();\n  return (\n    <StyledNav>\n      <Flex>\n        <Flex>\n          <img\n            style={{ marginRight: \"0.7rem\" }}\n            src=\"https://picsum.photos/20/20\"\n            alt=\"Logo\"\n          />\n          <FColumn>\n            <h3>My Unsplash</h3>\n            <p>devchallenges.io</p>\n          </FColumn>\n        </Flex>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setPage(0);\n            dispatch(clearPhotos());\n            setSearch(value);\n          }}\n        >\n          <Input\n            placeholder=\"Search by name\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Form>\n      </Flex>\n      <Button onClick={() => setToggle(true)}>Add photo</Button>\n    </StyledNav>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useAppDispatch } from \"../hooks/hooks\";\nimport { deletePhoto } from \"../redux/photosSlice\";\nimport { Photo } from \"../types\";\n\nconst Card = styled.div`\n  border-radius: 1rem;\n  width: 100;\n  position: relative;\n\n  &:hover div {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  img {\n    border-radius: 1rem;\n    display: block;\n    max-width: 100%;\n    width: 100%;\n  }\n\n  div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.25);\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    visibility: hidden;\n    opacity: 0;\n\n    button {\n      padding: 0.375rem 1rem;\n      margin-left: auto;\n      color: #eb5757;\n      border: solid 1px #eb5757;\n      border-radius: 2rem;\n      font-size: 0.625rem;\n      background-color: rgba(0, 0, 0, 0);\n      font-family: \"Montserrat\", sans-serif;\n      font-weight: 500;\n    }\n\n    p {\n      color: white;\n      font-weight: 700;\n      font-size: 1.125rem;\n      font-family: \"Montserrat\", sans-serif;\n    }\n  }\n`;\n\ninterface PhotoProps {\n  photo: Photo;\n}\n\nexport const PhotoCard: React.FC<PhotoProps> = ({ photo }) => {\n  const dispatch = useAppDispatch();\n  const { label, url } = photo;\n  return (\n    <Card>\n      <img src={url} alt={label} />\n      <div>\n        <button\n          onClick={() => {\n            dispatch(deletePhoto({ id: photo.id }));\n          }}\n        >\n          delete\n        </button>\n        <p>{label}</p>\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport styled from \"styled-components\";\nimport { useAppSelector } from \"../hooks/hooks\";\nimport { selectPhotos } from \"../redux/photosSlice\";\nimport { PhotoCard } from \"./PhotoCard\";\n\nconst Container = styled.div`\n  padding: 2rem 5.5rem;\n`;\n\ninterface photosProps {}\n\nexport const Photos: React.FC<photosProps> = () => {\n  const { photos } = useAppSelector(selectPhotos);\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={3}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {photos.map((photo) => (\n          <PhotoCard photo={photo} key={photo.id} />\n        ))}\n      </Masonry>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AddPhoto } from \"./Components/AddPhoto\";\nimport { Button } from \"./Components/Button\";\nimport { Navbar } from \"./Components/Navbar\";\nimport { Photos } from \"./Components/Photos\";\nimport { useAppDispatch } from \"./hooks/hooks\";\nimport { getAllPhotos } from \"./redux/photosSlice\";\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nexport const App: React.FC = () => {\n  const [toggle, setToggle] = useState(false);\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllPhotos({ page, search }));\n  }, [page, search, dispatch]);\n\n  return (\n    <Container>\n      {toggle && <AddPhoto setToggle={setToggle} />}\n      <Navbar\n        setPage={setPage}\n        setToggle={setToggle}\n        setSearch={setSearch}\n      />\n      <Photos />\n      <div\n        style={{\n          marginBottom: \"1rem\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button onClick={() => setPage((prev) => prev + 1)}>\n          Load more...\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport photosReducer from \"./photosSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    photos: photosReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}